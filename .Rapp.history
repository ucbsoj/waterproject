R version 3.0.1 (2013-05-16) -- "Good Sport"#
Copyright (C) 2013 The R Foundation for Statistical Computing#
Platform: x86_64-apple-darwin10.8.0 (64-bit)#
#
R is free software and comes with ABSOLUTELY NO WARRANTY.#
You are welcome to redistribute it under certain conditions.#
Type 'license()' or 'licence()' for distribution details.#
#
  Natural language support but running in an English locale#
#
R is a collaborative project with many contributors.#
Type 'contributors()' for more information and#
'citation()' on how to cite R or R packages in publications.#
#
Type 'demo()' for some demos, 'help()' for on-line help, or#
'help.start()' for an HTML browser interface to help.#
Type 'q()' to quit R.#
#
[R.app GUI 1.61 (6492) x86_64-apple-darwin10.8.0]#
#
[History restored from /Users/chelsimoy/.Rapp.history]#
#
> setwd("~dataviz-fall-2013/data-wild")#
Error in setwd("~dataviz-fall-2013/data-wild") : #
  cannot change working directory#
> setwd("~/dataviz-fall-2013/data-wild")#
> data <- read.csv("county-data.csv")#
> head(data)#
  ACCOMACK.VA. X1#
1      ADA(ID)  9#
2    ADAIR(KY)  7#
3    ADAIR(MO)  1#
4    ADAMS(CO) 15#
5    ADAMS(IL) 14#
6    ADAMS(IN)  4#
> names(data)#
[1] "ACCOMACK.VA." "X1"          #
> nrow(data)#
[1] 1929#
> guns <- subset(data, data$X1)#
Error in subset.data.frame(data, data$X1) : 'subset' must be logical#
> avg(data)#
Error: could not find function "avg"#
> s <- split(data$data, list(data$names),)#
Error in split.default(data$data, list(data$names), ) : #
  first argument must be a vector#
> s <- split(data$ACCOMACK.VA, list(data$names),)#
Error in split.default(data$ACCOMACK.VA, list(data$names), ) : #
  group length is 0 but data length > 0#
> s <- split(data$ACCOMACK.VA, list(data$ACCOMACK.VA),)#
> s(data)#
Error: could not find function "s"#
> head(data)#
  ACCOMACK.VA. X1#
1      ADA(ID)  9#
2    ADAIR(KY)  7#
3    ADAIR(MO)  1#
4    ADAMS(CO) 15#
5    ADAMS(IL) 14#
6    ADAMS(IN)  4#
> as.numeric(gsub(",", "", data$ACCOMACK.VA))#
   [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
  [45] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
  [89] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [133] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [177] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [221] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [265] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [309] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [353] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [397] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [441] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [485] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [529] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [573] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [617] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [661] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [705] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [749] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [793] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [837] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [881] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [925] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
 [969] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1013] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1057] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1145] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1189] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1233] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1277] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1321] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1365] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1409] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1453] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1497] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1541] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1585] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1629] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1673] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1717] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1761] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1805] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1849] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
[1893] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA#
Warning message:#
NAs introduced by coercion #
> head(data)#
  ACCOMACK.VA. X1#
1      ADA(ID)  9#
2    ADAIR(KY)  7#
3    ADAIR(MO)  1#
4    ADAMS(CO) 15#
5    ADAMS(IL) 14#
6    ADAMS(IN)  4#
> state <- split(data, data$ACCOMACK.VA)#
> state(data)#
Error: could not find function "state"#
> state$data <- data.frame(ACCOMACK.VA)data$county <- sapply(strsplit(as.character(data$ACCOMACK.VA.), split="\\("), function(x) { x[1] })#
Error: unexpected symbol in "state$data <- data.frame(ACCOMACK.VA)data"#
> #
> data$state <- sapply(strsplit(as.character(data$ACCOMACK.VA.), split="\\("), function(x) { x[2] })#
> head(data)#
  ACCOMACK.VA. X1 state#
1      ADA(ID)  9   ID)#
2    ADAIR(KY)  7   KY)#
3    ADAIR(MO)  1   MO)#
4    ADAMS(CO) 15   CO)#
5    ADAMS(IL) 14   IL)#
6    ADAMS(IN)  4   IN)#
> data$state <- sapply(strsplit(as.character(data$state.), split="\\)"), function(x) { x[1] })#
Error in `$<-.data.frame`(`*tmp*`, "state", value = list()) : #
  replacement has 0 rows, data has 1929#
> data$state <- sapply(strsplit(as.character(data$state), split="\\)"), function(x) { x[1] })#
> head(data)#
  ACCOMACK.VA. X1 state#
1      ADA(ID)  9    ID#
2    ADAIR(KY)  7    KY#
3    ADAIR(MO)  1    MO#
4    ADAMS(CO) 15    CO#
5    ADAMS(IL) 14    IL#
6    ADAMS(IN)  4    IN#
> data$county <- sapply(strsplit(as.character(data$ACCOMACK.VA.), split="\\("), function(x) { x[1] })#
> head(data)#
  ACCOMACK.VA. X1 state county#
1      ADA(ID)  9    ID    ADA#
2    ADAIR(KY)  7    KY  ADAIR#
3    ADAIR(MO)  1    MO  ADAIR#
4    ADAMS(CO) 15    CO  ADAMS#
5    ADAMS(IL) 14    IL  ADAMS#
6    ADAMS(IN)  4    IN  ADAMS#
> guns <- X1[order(data$ACCOMACK.VA, decreasing=T)]#
Error: object 'X1' not found#
> guns <- X1[order(data$X1, decreasing=T)]#
Error: object 'X1' not found#
> guns <- data$X1#
> guns <- guns[order(data$guns, decreasing=T)]#
Error in order(data$guns, decreasing = T) : argument 1 is not a vector#
> data$X1#
   [1] 9      7      1      15     14     4      50     4      3      2      15     4      3      4      2      26     2      1      2     #
  [20] 2      60     1      9      1      10     1      1      23     216    2      2      2      14     1      1      1      19     2     #
  [39] 8      11     1      1      3      5      18     1      3      1      18     21     2      5      5      39     1      12     5     #
  [58] 1      4      3      1      81     2      8      1      3      1      5      6      5      4      8      2      1      4      1     #
  [77] 9      12     2      8      25     3      2      3      13     24     2      9      2      9      2      1      10     2      2     #
  [96] 22     61     3      3      1      14     5      1      3      1      7      1      7      3      5      2      7      1      27    #
 [115] 89     1      64     6      31     2      2      1      4      31     5      1      1      4      2      1      1      10     8     #
 [134] 272    1      2      7      2      1      16     15     19     5      3      2      15     3      1      10     6      1      12    #
 [153] 2      25     9      1      8      6      8      3      15     15     4      2      14     1      1      3      3      1      2     #
 [172] 2      59     1      6      2      2      2      68     1      2      3      7      4      8      4      4      1      13     2     #
 [191] 2      12     1      1      1      2      3      5      5      11     39     3      2      1      5      22     1      66     11    #
 [210] 8      9      33     1      1      1      23     14     4      26     1      2      2      7      2      6      2      4      2     #
 [229] 3      8      1      1      5      4      7      2      11     1      3      1      3      15     1      13     6      5      5     #
 [248] 14     2      1      3      117    13     5      3      7      4      1      7      4      1      1      1      1      7      1     #
 [267] 9      135    9      2      18     4      1      15     1      1      3      3      2      1      2      1      6      8      1     #
 [286] 4      1      4      2      5      1      11     5      3      16     12     1      1      1      1      3      4      24     8     #
 [305] 44     4      3      1      9      7      4      11     4      2      9      1      3      3      31     7      64     18     8     #
 [324] 5      4      8      1      17     1      2      2      1      8      14     8      8      110    1      79     2      5      2     #
 [343] 1      4      23     3      4      1      10     8      13     2      1      1      6      1      447    83     20     1      5     #
 [362] 9      1      12     1      6      23     13     21     1      4      12     6      1      8      1      2      1      1      12    #
 [381] 3      1      2      21     2      9      10     1      15,781 3      1      35     1      13     1      7      6      8      2     #
 [400] 1      35     5      6      4      7      2      3      1      1      6      1      3      2      2      1      55     10     2     #
 [419] 6      3      8      1      1      3      49     4      5      1      6      1      38     95     1      19     3      8      20    #
 [438] 2      1      2      156    110    1      1      2      11     2      7      76     6      38     1      1      3      1      2     #
 [457] 11     39     51     1      74     1      1      1      2      9      2      1      3      73     1      2      53     3      1     #
 [476] 3      1      7      1      1      11     29     22     2      16     11     1      3      3      6      1      2      3      1     #
 [495] 8      26     6      2      2      1      14     3      1      5      1      1      1      20     1      4      6      4      1,879 #
 [514] 8      30     7      3      1      1      69     17     1      65     1      1      6      26     1      2      7      1      4     #
 [533] 1      11     43     34     1      1      144    1      3      6      3      1      2      2      14     12     7      9      21    #
 [552] 6      1      10     43     2      1      4      2      3      9      3      4      2      1      17     1      2      4      3     #
 [571] 9      16     66     21     6      1      5      1      1      1      4      4      2      3      1      15     11     9      29    #
 [590] 4      1      1      38     5      7      8      21     8      3      24     3      24     6      2      6      156    4      9     #
 [609] 1      2      1      1      8      1      1      6      3      65     5      16     18     1      9      1      1      3      30    #
 [628] 9      3      20     8      8      7      35     1      1      8      14     9      1      5      1      1      1      1      1     #
 [647] 3      1      1      8      4      1      4      8      43     5      1      17     1      16     1      4      4      2      1     #
 [666] 1      6      8      3      6      9      1      1      3      25     22     2      1      25     1      4      2      1      13    #
 [685] 3      8      111    17     1      1      2      2      10     1      1      46     3      1      1      10     3      4      5     #
 [704] 49     72     62     75     1      34     4      10     5      1      5      8      6      2      6      3      43     8      1     #
 [723] 2      10     2      164    35     8      1      54     2      21     2      18     1      3      2      4      15     2      8     #
 [742] 2      101    1      249    3      6      6      21     24     2      4      26     3      5      9      6      1      6      7     #
 [761] 6      1      59     2      296    7      1      1      60     1      1      8      1      16     1      5      2      1      10    #
 [780] 17     2      2      3      80     1      3      5      4      1      1      2      17     4      4      11     3      4      1     #
 [799] 2      1      1      2      5      2      2      37     7      1      4      7      4      3      1      4      16     1      1     #
 [818] 6      1      5      1      30     11     8      1      3      2      76     11     4      2      6      31     16     8      4     #
 [837] 3      5      3      2      1      68     1      14     1      1      2      1      1      27     272    107    20     1      31    #
 [856] 3      1      186    63     9      4      7      13     7      15     4      3      1      2      6      31     21     77     29    #
 [875] 12     3      10     1      82     1      2      1      7      1      63     2      28     2      761    257    2      1      1     #
 [894] 9      1      20     2      124    2      44     3      9      2      2      36     1      16     1      1      3      36     22    #
 [913] 3      1      64     1      1      1      48     37     1      249    55     5      1      1      1      3      10     2      19    #
 [932] 1      2      5      10     456    2,715  2      23     1      4      2      3      1      3      14     9      4      2      5     #
 [951] 1      9      10     5      2      17     80     4      11     1      1      2      6      2      17     1      4      12     3     #
 [970] 1      2      1      1      3      13     4      3      17     10     21     2      7      9      2      83     1      4      3     #
 [989] 2      291    2      1      14     3      5      8      1      1      2      1      1      6      3      6      36     3      16    #
[1008] 16     1      2      2      16     68     4      10     1      1      1      32     2      71     1      1      2      11     9     #
[1027] 3      9      6      14     14     1      13     34     2      172    3      1      8      91     9      1      26     1      4     #
[1046] 1      8      2      3      1      3      3      1      32     3      71     2      2      3      17     109    39     42     23    #
[1065] 10     165    1      8      2      44     4      36     2      3      2      7      4      8      6      8      213    25     8     #
[1084] 13     2      33     1,106  3      4      19     16     5      1      6      5      3      7      6      39     7      7      16    #
[1103] 1      4      69     1      2      6      1      3      1      3      2      2      1      1      1      2      1      2      7     #
[1122] 1      11     70     8      4      17     5      4      93     1      69     1      17     12     15     3      21     1      6     #
[1141] 9      1      1      2      2      1      1      1      5      1      1      3      2      1      4      7      2      3      4     #
[1160] 5      12     1      34     1      9      2      3      1      3      3      1      1      394    5      6      1      63     1     #
[1179] 6      1      48     1      7      3      5      1      15     2      1      33     5      55     6      3      12     8      2     #
[1198] 7      9      93     1      5      20     6      9      4      1      36     1      69     3      22     4      5      3      4     #
[1217] 10     40     1      1      9      14     3      1      3      1      1      1      3      39     6      23     1      48     20    #
[1236] 2      5      3      2      1      14     1      6      4      2      9      17     1      6      4      9      6      2      10    #
[1255] 3      1      19     1      5      9      2      2      3      5      4      22     1      1      41     6      1      1      3     #
[1274] 7      15     1      39     14     1      1      3      19     1      14     1      8      6      3      13     1      1      58    #
[1293] 2      40     5      7      1      11     2      40     1      40     42     4      4      3      2      5      13     2      2     #
[1312] 1      8      1      1      4      1      1      8      1      3      35     34     1      1      1      2      1      3      2     #
[1331] 1      43     1      1      1      88     1      1      1      1      7      2      5      2      1      2      2      1      2     #
[1350] 3      10     5      1      7      3      1      1      10     2      102    3      28     4      32     1      2      1      6     #
[1369] 6      9      92     6      3      4      9      1      1      24     2      1      3      2      11     2      33     5      49    #
[1388] 6      5      29     2      3      3      1      2      1      1      2      1      9      2      5      22     4      53     2     #
[1407] 2      7      2      1      31     7      4      1      1      8      8      905    1      1      4      4      7      1      2     #
[1426] 6      2      6      26     4      7      1      14     4      3      2      10     175    1      11     9      20     7      1     #
[1445] 2      2      3      7      2      3      3      1      21     1      102    12     1      18     1      4      3      4      6     #
[1464] 41     4      3      66     20     2      1      1      1      4      1      3      7      1      4      5      29     13     3     #
[1483] 7      27     1      1      19     1      1      1      27     10     2      4      2      7      4      63     1      81     2     #
[1502] 2      8      4      9      1      2      1      5      5      31     4      1      2      5      10     1      4      16     1     #
[1521] 1      15     18     15     3      13     2      49     6      8      42     2      3      13     3      13     14     51     1     #
[1540] 10     5      2      18     1      1      4      31     3      2      24     1      3      53     58     6      1      7      5     #
[1559] 2      7      2      2      4      4      116    3      22     2      1      5      2      7      6      29     6      1      1     #
[1578] 11     28     25     3      4      21     33     2      1      6      9      25     8      1      4      1      15     3      3     #
[1597] 3      4      15     27     21     4      14     37     3      20     362    2      1      7      4      1      2      7      1     #
[1616] 6      3      1      11     2      9      1      10     2      1      2      3      11     8      2      1      20     6      589   #
[1635] 5      6      1      1      11     3      17     15     1      8      2      1      9      19     20     2      1      3      1     #
[1654] 6      1      1      4      5      1      1      4      10     1      1      8      1      20     1      4      11     1      1     #
[1673] 7      113    1      6      2      2      3      1      1      1      3      1      16     69     5      3      22     1      63    #
[1692] 28     1      1      5      10     10     2      37     7      2      1      3      2      2      5      1      1      2      5     #
[1711] 9      1      98     74     7      11     8      1      1      2      2      3      1      6      23     2      2      3      11    #
[1730] 8      4      44     55     1      5      47     2      2      2      2      1      1      15     2      8      1      2      5     #
[1749] 28     11     1      4      2      2      1      1      3      2      17     1      2      1      5      1      19     2      2     #
[1768] 3      1      55     2      6      87     1      13     31     2      3      95     8      18     11     2      61     3      1     #
[1787] 7      1      17     22     3      6      2      70     3      11     5      2      11     3      42     20     1      3      4     #
[1806] 3      7      25     2      4      1      1      4      6      3      1      17     1      236    1      4      1      13     1     #
[1825] 12     3      2      1      35     14     5      89     2      11     2      2      9      26     5      62     1      24     4     #
[1844] 18     1      2      2      1      6      12     5      2      11     2      4      1      2      9      1      6      5      1     #
[1863] 1      3      1      4      2      1      7      1      7      4      33     52     24     28     8      1      2      3      909   #
[1882] 6      57     5      1      2      11     1      226    21     5      4      44     2      2      9      13     4      23     11    #
[1901] 9      7      10     2      1      1      5      1      1      1      7      4      1      6      10     22     155    1      13    #
[1920] 2      1      1      3      7      2      1      3      13     1     #
127 Levels: 1 1,106 1,879 10 101 102 107 109 11 110 111 113 116 117 12 124 13 135 14 144 15 15,781 155 156 16 164 165 17 172 175 18 ... 98#
> head(guns)#
[1] 9  7  1  15 14 4 #
127 Levels: 1 1,106 1,879 10 101 102 107 109 11 110 111 113 116 117 12 124 13 135 14 144 15 15,781 155 156 16 164 165 17 172 175 18 ... 98#
> avg(guns)#
Error: could not find function "avg"#
> tail(guns)#
[1] 7  2  1  3  13 1 #
127 Levels: 1 1,106 1,879 10 101 102 107 109 11 110 111 113 116 117 12 124 13 135 14 144 15 15,781 155 156 16 164 165 17 172 175 18 ... 98#
> guns <- guns[order(data$guns, increasing=T)]#
Error in order(data$guns, increasing = T) : argument 1 is not a vector#
> data$guns <- guns[order(guns, decreasing=T),]#
Error in `[.default`(guns, order(guns, decreasing = T), ) : #
  incorrect number of dimensions#
> data$guns <- order(guns, decreasing=T),]#
Error: unexpected ',' in "data$guns <- order(guns, decreasing=T),"#
> data$guns <- order(guns, decreasing=T)]#
Error: unexpected ']' in "data$guns <- order(guns, decreasing=T)]"#
> data$guns <- order(guns, decreasing=T)#
> head(data$guns)#
[1] 1713  432 1779 1130 1200 1371#
> data$guns#
   [1] 1713  432 1779 1130 1200 1371 1040 1881 1418    1   23   77   88   90  155  211  267  269  309  315  362  386  466  550  561  571#
  [27]  588  608  623  628  639  671  756  860  894  902  947  952  983 1026 1028 1041 1141 1165 1199 1205 1221 1246 1251 1260 1370 1375#
  [53] 1400 1441 1505 1588 1621 1647 1711 1837 1858 1896 1901  115 1832 1336 1773  358  985  879   62 1500  784  957   39   64   72   80#
  [79]  133  157  159  185  210  230  284  304  323  326  333  335  336  350  375  398  421  436  495  514  596  598  613  631  632  637#
 [105]  650  654  668  686  715  721  728  741  772  824  835  996 1039 1047 1068 1078 1080 1083 1125 1196 1286 1313 1319 1416 1417 1503#
 [131] 1530 1590 1629 1644 1665 1717 1730 1745 1780 1877  339  873  889  449  828  707  461 1714  470  705 1021 1056 1124 1794    2  106#
 [157]  108  112  137  183  223  235  256  259  265  310  320  396  405  448  478  516  530  549  595  633  760  766  807  810  862  864#
 [183]  883  982 1076 1097 1100 1101 1121 1156 1183 1198 1274 1296 1341 1354 1408 1412 1423 1431 1443 1448 1476 1483 1496 1557 1560 1572#
 [209] 1610 1614 1673 1700 1715 1787 1807 1869 1871 1902 1911 1924  520 1105 1132 1210 1686  179  842 1013  208  573 1467  523  618  117#
 [235]  321  915  859  885 1177 1498 1691  706 1840   97 1784   21  769   69  118  150  158  175  225  245  283  355  366  373  397  403#
 [261]  410  419  429  450  490  497  511  526  542  552  575  603  605  616  667  670  716  718  747  748  757  759  761  818  832  870#
 [287]  963 1002 1004 1029 1079 1094 1098 1108 1140 1175 1179 1193 1204 1231 1243 1249 1252 1270 1287 1368 1369 1372 1388 1426 1428 1463#
 [313] 1529 1555 1573 1575 1587 1616 1633 1636 1654 1676 1724 1772 1792 1814 1849 1860 1882 1914  173  763 1634 1292 1554 1883  416  923#
 [339] 1192 1733 1770  730  473 1405 1553 1874  459 1538    7   44   52   53   57   68   70  102  110  125  143  198  199  205  233  246#
 [365]  247  254  290  293  324  341  361  402  427  504  577  594  619  641  656  703  712  714  755  776  787  803  820  838  924  934#
 [391]  950  954  995 1092 1095 1128 1149 1160 1174 1185 1191 1202 1214 1237 1259 1264 1295 1308 1343 1352 1386 1389 1402 1479 1509 1510#
 [417] 1515 1541 1558 1570 1635 1658 1687 1695 1706 1710 1735 1748 1763 1797 1831 1839 1851 1861 1884 1891 1907  425  704 1387 1528  919#
 [443] 1181 1234 1736  696  936  357  305  900 1070 1732 1893  535  555  655  720 1332 1063 1303 1531 1801 1269 1464 1218 1294 1300 1302#
 [469]    6    8   12   14   59   71   75  123  128  163  184  186  187  218  227  234  257  260  272  286  288  302  306  311  313  325#
 [495]  344  347  371  404  426  510  512  532  558  563  569  581  582  590  607  651  653  662  663  681  702  710  738  752  788  793#
 [521]  794  797  809  811  814  830  836  861  866  941  948  958  967  976  987 1014 1045 1071 1077 1089 1104 1126 1129 1155 1159 1206#
 [547] 1213 1216 1244 1250 1265 1304 1305 1316 1363 1374 1404 1413 1421 1422 1430 1434 1460 1462 1465 1473 1478 1494 1497 1504 1512 1518#
 [573] 1546 1563 1564 1582 1592 1598 1602 1611 1657 1661 1669 1731 1752 1805 1810 1813 1821 1843 1855 1866 1872 1892 1898 1912 1173   54#
 [599]  201  458 1062 1099 1230 1277  431  451  593  806  920 1604 1699 1607  905  911 1005 1072 1208  392  401  634  727 1322 1829  536#
 [625]  709 1034 1163 1323  212 1086 1190 1385 1584 1873 1019 1054 1364  119  124  319  833  855  871 1411 1511 1547 1776  515  627  822#
 [651]    9   13   43   47   60   66   82   84   98   99  104  109  144  147  160  168  169  182  197  202  229  239  241  251  255  277#
 [677]  278  294  301  307  317  318  346  381  390  407  412  420  424  435  454  469  474  476  488  489  493  502  517  541  543  560#
 [703]  562  570  584  599  601  617  626  629  647  669  674  685  697  701  719  736  746  754  783  786  796  812  826  837  839  856#
 [729]  867  876  901  910  913  928  943  945  969  974  977  988  994 1003 1006 1027 1037 1049 1051 1052 1055 1059 1074 1088 1096 1110#
 [755] 1112 1137 1152 1158 1167 1169 1170 1184 1194 1211 1215 1223 1225 1229 1238 1255 1263 1273 1281 1288 1306 1321 1329 1350 1355 1361#
 [781] 1373 1381 1392 1393 1435 1447 1450 1451 1461 1466 1475 1482 1525 1533 1535 1548 1552 1566 1581 1595 1596 1597 1605 1617 1627 1640#
 [807] 1652 1679 1683 1688 1703 1722 1728 1757 1768 1778 1785 1791 1795 1800 1804 1806 1815 1826 1864 1880 1923 1927  765  990  482  589#
 [833]  874 1390 1480 1574  887 1362 1579 1692 1749 1876  134  851  114  850 1484 1491 1600   16  219  496  527  753 1043 1429 1838  890#
 [859]   81  154  675  679 1082 1580 1589 1808  745  922   86  303  600  602  750 1378 1550 1842 1875 1819   28  216  345  367  939 1064#
 [885] 1232 1725 1899 1889   96  206  483  676  912 1212 1266 1403 1567 1689 1790 1916   29 1081   50  369  384  551  574  597  732  749#
 [911]  872  980 1138 1453 1583 1601 1890  359  437  508  630  853  896 1203 1235 1442 1468 1606 1632 1649 1667 1802  937   10   15   17#
 [937]   19   20   30   31   32   38   51   63   73   79   83   87   89   91   94   95  111  120  121  129  136  138  145  153  164  171#
 [963]  172  176  177  178  181  190  191  196  203  221  222  224  226  228  236  249  270  279  281  289  314  330  331  340  342  352#
 [989]  377  383  385  399  406  413  414  418  438  440  445  447  456  465  467  472  484  492  498  499  529  545  546  556  559  564#
[1015]  568  583  604  610  664  677  682  691  692  717  723  725  731  733  737  740  742  751  764  777  781  782  791  799  802  804#
[1041]  805  827  831  840  847  869  881  886  888  891  897  899  903  904  930  933  938  942  949  955  962  964  971  981  984  989#
[1067]  991  999 1010 1011 1020 1024 1035 1048 1057 1058 1069 1073 1075 1085 1107 1113 1114 1118 1120 1144 1145 1153 1157 1166 1188 1197#
[1093] 1236 1239 1245 1253 1261 1262 1293 1299 1307 1310 1311 1327 1330 1342 1344 1346 1347 1349 1359 1366 1379 1382 1384 1391 1395 1398#
[1119] 1401 1406 1407 1409 1425 1427 1436 1445 1446 1449 1469 1493 1495 1501 1502 1507 1514 1527 1532 1542 1549 1559 1561 1562 1568 1571#
[1145] 1585 1608 1613 1620 1624 1626 1630 1645 1650 1677 1678 1698 1701 1704 1705 1709 1720 1721 1726 1727 1737 1738 1739 1740 1744 1747#
[1171] 1753 1754 1758 1761 1766 1767 1771 1777 1783 1793 1798 1809 1827 1833 1835 1836 1846 1847 1852 1854 1857 1867 1879 1886 1894 1895#
[1197] 1904 1920 1925   37  142  434  931 1090 1257 1282 1487 1648 1765  858   45   49  271  322  621  734 1458 1523 1543 1781 1844 1438#
[1223] 1036  328  521  566  658  688  780  792  956  965  978 1060 1127 1134 1247 1641 1759 1789 1817 1066  726  140  295  485  572  620#
[1249]  660  774  815  834  907 1007 1008 1012 1091 1102 1519 1685  441  606 1917  389    4   11  141  146  161  162  242  274  586  739#
[1275]  865 1136 1187 1275 1522 1524 1594 1599 1642 1743  539    5   33  101  165  217  248  334  501  547  638  844  946  993 1030 1031#
[1301] 1222 1241 1278 1284 1433 1537 1603 1830  268   85  189  244  253  351  368  394  684  863  975 1033 1084 1289 1309 1481 1526 1534#
[1327] 1536 1775 1823 1897 1919 1928  898   56   78  152  192  296  364  372  380  548  875  968 1135 1161 1195 1456 1825 1850  252 1565#
[1353] 1674  687  337  442   40  200  209  237  292  312  446  457  481  486  534  587  795  823  829  959 1025 1123 1298 1383 1440 1578#
[1379] 1619 1628 1639 1670 1716 1729 1750 1782 1796 1799 1834 1853 1887 1900 1061  852 1360 1455  743   25   93  132  149  349  387  417#
[1405]  554  693  700  711  724  779  877  929  935  953  979 1015 1065 1217 1254 1351 1358 1437 1492 1516 1540 1623 1662 1696 1697 1903#
[1431] 1915  513 1087    3   18   22   24   26   27   34   35   36   41   42   46   48   55   58   61   65   67   74   76   92  100  103#
[1457]  105  107  113  116  122  126  127  130  131  135  139  148  151  156  166  167  170  174  180  188  193  194  195  204  207  213#
[1483]  214  215  220  231  232  238  240  243  250  258  261  262  263  264  266  273  275  276  280  282  285  287  291  297  298  299#
[1509]  300  308  316  327  329  332  338  343  348  353  354  356  360  363  365  370  374  376  378  379  382  388  391  393  395  400#
[1535]  408  409  411  415  422  423  428  430  433  439  443  444  452  453  455  460  462  463  464  468  471  475  477  479  480  487#
[1561]  491  494  500  503  505  506  507  509  518  519  522  524  525  528  531  533  537  538  540  544  553  557  565  567  576  578#
[1587]  579  580  585  591  592  609  611  612  614  615  622  624  625  635  636  640  642  643  644  645  646  648  649  652  657  659#
[1613]  661  665  666  672  673  678  680  683  689  690  694  695  698  699  708  713  722  729  735  744  758  762  767  768  770  771#
[1639]  773  775  778  785  789  790  798  800  801  808  813  816  817  819  821  825  841  843  845  846  848  849  854  857  868  878#
[1665]  880  882  884  892  893  895  906  908  909  914  916  917  918  921  925  926  927  932  940  944  951  960  961  966  970  972#
[1691]  973  986  992  997  998 1000 1001 1009 1016 1017 1018 1022 1023 1032 1038 1042 1044 1046 1050 1053 1067 1093 1103 1106 1109 1111#
[1717] 1115 1116 1117 1119 1122 1131 1133 1139 1142 1143 1146 1147 1148 1150 1151 1154 1162 1164 1168 1171 1172 1176 1178 1180 1182 1186#
[1743] 1189 1201 1207 1209 1219 1220 1224 1226 1227 1228 1233 1240 1242 1248 1256 1258 1267 1268 1271 1272 1276 1279 1280 1283 1285 1290#
[1769] 1291 1297 1301 1312 1314 1315 1317 1318 1320 1324 1325 1326 1328 1331 1333 1334 1335 1337 1338 1339 1340 1345 1348 1353 1356 1357#
[1795] 1365 1367 1376 1377 1380 1394 1396 1397 1399 1410 1414 1415 1419 1420 1424 1432 1439 1444 1452 1454 1457 1459 1470 1471 1472 1474#
[1821] 1477 1485 1486 1488 1489 1490 1499 1506 1508 1513 1517 1520 1521 1539 1544 1545 1551 1556 1569 1576 1577 1586 1591 1593 1609 1612#
[1847] 1615 1618 1622 1625 1631 1637 1638 1643 1646 1651 1653 1655 1656 1659 1660 1663 1664 1666 1668 1671 1672 1675 1680 1681 1682 1684#
[1873] 1690 1693 1694 1702 1707 1708 1712 1718 1719 1723 1734 1741 1742 1746 1751 1755 1756 1760 1762 1764 1769 1774 1786 1788 1803 1811#
[1899] 1812 1816 1818 1820 1822 1824 1828 1841 1845 1848 1856 1859 1862 1863 1865 1868 1870 1878 1885 1888 1905 1906 1908 1909 1910 1913#
[1925] 1918 1921 1922 1926 1929#
> plot(data$guns)#
> plot(data$guns, data$state, type="l", col="red")#
Error in plot.window(...) : need finite 'ylim' values#
In addition: Warning messages:#
1: In xy.coords(x, y, xlabel, ylabel, log) : NAs introduced by coercion#
2: In min(x) : no non-missing arguments to min; returning Inf#
3: In max(x) : no non-missing arguments to max; returning -Inf#
> barplot(data$guns, data$state)#
Error in width/2 : non-numeric argument to binary operator#
In addition: Warning message:#
In mean.default(width) : argument is not numeric or logical: returning NA#
> barplot(data$guns)#
> barplot(data$guns, data$county)#
Error in width/2 : non-numeric argument to binary operator#
In addition: Warning message:#
In mean.default(width) : argument is not numeric or logical: returning NA#
> names(data)#
[1] "ACCOMACK.VA." "X1"           "state"        "county"       "guns"        #
> max(guns)#
Error in Summary.factor(c(120L, 101L, 1L, 21L, 19L, 68L, 81L, 68L, 55L,  : #
  max not meaningful for factors#
> data$guns <- as.numeric(data$guns)#
> max(guns)#
Error in Summary.factor(c(120L, 101L, 1L, 21L, 19L, 68L, 81L, 68L, 55L,  : #
  max not meaningful for factors#
> head(guns)#
[1] 9  7  1  15 14 4 #
127 Levels: 1 1,106 1,879 10 101 102 107 109 11 110 111 113 116 117 12 124 13 135 14 144 15 15,781 155 156 16 164 165 17 172 175 18 ... 98#
> head(data)#
  ACCOMACK.VA. X1 state county guns#
1      ADA(ID)  9    ID    ADA 1713#
2    ADAIR(KY)  7    KY  ADAIR  432#
3    ADAIR(MO)  1    MO  ADAIR 1779#
4    ADAMS(CO) 15    CO  ADAMS 1130#
5    ADAMS(IL) 14    IL  ADAMS 1200#
6    ADAMS(IN)  4    IN  ADAMS 1371#
> adair_ky <- subset(data, data$ACCOMACK.VA == "ADAIR(KY)")#
> head(adair_ky)#
  ACCOMACK.VA. X1 state county guns#
2    ADAIR(KY)  7    KY  ADAIR  432#
> data.guns <- as.numeric(as.character(data$X1))#
Warning message:#
NAs introduced by coercion #
> head(data)#
  ACCOMACK.VA. X1 state county guns#
1      ADA(ID)  9    ID    ADA 1713#
2    ADAIR(KY)  7    KY  ADAIR  432#
3    ADAIR(MO)  1    MO  ADAIR 1779#
4    ADAMS(CO) 15    CO  ADAMS 1130#
5    ADAMS(IL) 14    IL  ADAMS 1200#
6    ADAMS(IN)  4    IN  ADAMS 1371#
> data.guns <- as.numeric(as.character(data$X1))#
Warning message:#
NAs introduced by coercion #
> head(data)#
  ACCOMACK.VA. X1 state county guns#
1      ADA(ID)  9    ID    ADA 1713#
2    ADAIR(KY)  7    KY  ADAIR  432#
3    ADAIR(MO)  1    MO  ADAIR 1779#
4    ADAMS(CO) 15    CO  ADAMS 1130#
5    ADAMS(IL) 14    IL  ADAMS 1200#
6    ADAMS(IN)  4    IN  ADAMS 1371#
> data$guns <- as.numeric(as.character(data$X1))#
Warning message:#
NAs introduced by coercion #
> head(data)#
  ACCOMACK.VA. X1 state county guns#
1      ADA(ID)  9    ID    ADA    9#
2    ADAIR(KY)  7    KY  ADAIR    7#
3    ADAIR(MO)  1    MO  ADAIR    1#
4    ADAMS(CO) 15    CO  ADAMS   15#
5    ADAMS(IL) 14    IL  ADAMS   14#
6    ADAMS(IN)  4    IN  ADAMS    4#
> #
> data$guns <- data$guns[order(data$guns, decreasing=T),]#
Error in data$guns[order(data$guns, decreasing = T), ] : #
  incorrect number of dimensions#
> head(data$guns)#
[1]  9  7  1 15 14  4#
> avg(data$guns)#
Error: could not find function "avg"#
> mt <- aggregate(data[, c(data$guns, data$county)])#
Error in `[.data.frame`(data, , c(data$guns, data$county)) : #
  undefined columns selected#
> aggMt <- aggregate(data$guns, list(data$state), sum)#
> head(aggMt)#
  Group.1    x#
1      AK   33#
2      AL 1070#
3      AR  945#
4      AZ  355#
5      CA  526#
6      CO  187#
> #
> guns_state <- aggregate(data$guns, list(data$state), sum)#
> guns_state#
   Group.1    x#
1       AK   33#
2       AL 1070#
3       AR  945#
4       AZ  355#
5       CA  526#
6       CO  187#
7       CT   46#
8       DC    2#
9       DE   10#
10      FL  673#
11      GA  933#
12      GU    2#
13      HI    8#
14      IA  397#
15      ID   39#
16      IL   NA#
17      IN   NA#
18      KS  177#
19      KY 1226#
20      LA  529#
21      MA  108#
22      MD   50#
23      ME   18#
24      MI  679#
25      MN  474#
26      MO  344#
27      MS 4296#
28      MT   53#
29      NC  295#
30      ND   31#
31      NE  104#
32      NH   14#
33      NJ   21#
34      NM   75#
35      NV  103#
36      NY   97#
37      OH 1121#
38      OK  207#
39      OR   40#
40      PA  181#
41      PR    5#
42      RI    5#
43      SC  152#
44      SD   36#
45      TN 1090#
46      TX  937#
47      UT   53#
48      VA  268#
49      VT    4#
50      WA  156#
51      WI 1647#
52      WV  202#
53      WY   29#
> barplot(guns_state)#
Error in barplot.default(guns_state) : #
  'height' must be a vector or a matrix#
> plot(guns_state)#
Error in plot.window(...) : need finite 'xlim' values#
In addition: Warning messages:#
1: In xy.coords(x, y, xlabel, ylabel, log) : NAs introduced by coercion#
2: In min(x) : no non-missing arguments to min; returning Inf#
3: In max(x) : no non-missing arguments to max; returning -Inf#
> plot(guns_state, type"l", col="red")#
Error: unexpected string constant in "plot(guns_state, type"l""#
> as.numeric(gsub(",","", data$X1))#
   [1]     9     7     1    15    14     4    50     4     3     2    15     4     3     4     2    26     2     1     2     2    60     1#
  [23]     9     1    10     1     1    23   216     2     2     2    14     1     1     1    19     2     8    11     1     1     3     5#
  [45]    18     1     3     1    18    21     2     5     5    39     1    12     5     1     4     3     1    81     2     8     1     3#
  [67]     1     5     6     5     4     8     2     1     4     1     9    12     2     8    25     3     2     3    13    24     2     9#
  [89]     2     9     2     1    10     2     2    22    61     3     3     1    14     5     1     3     1     7     1     7     3     5#
 [111]     2     7     1    27    89     1    64     6    31     2     2     1     4    31     5     1     1     4     2     1     1    10#
 [133]     8   272     1     2     7     2     1    16    15    19     5     3     2    15     3     1    10     6     1    12     2    25#
 [155]     9     1     8     6     8     3    15    15     4     2    14     1     1     3     3     1     2     2    59     1     6     2#
 [177]     2     2    68     1     2     3     7     4     8     4     4     1    13     2     2    12     1     1     1     2     3     5#
 [199]     5    11    39     3     2     1     5    22     1    66    11     8     9    33     1     1     1    23    14     4    26     1#
 [221]     2     2     7     2     6     2     4     2     3     8     1     1     5     4     7     2    11     1     3     1     3    15#
 [243]     1    13     6     5     5    14     2     1     3   117    13     5     3     7     4     1     7     4     1     1     1     1#
 [265]     7     1     9   135     9     2    18     4     1    15     1     1     3     3     2     1     2     1     6     8     1     4#
 [287]     1     4     2     5     1    11     5     3    16    12     1     1     1     1     3     4    24     8    44     4     3     1#
 [309]     9     7     4    11     4     2     9     1     3     3    31     7    64    18     8     5     4     8     1    17     1     2#
 [331]     2     1     8    14     8     8   110     1    79     2     5     2     1     4    23     3     4     1    10     8    13     2#
 [353]     1     1     6     1   447    83    20     1     5     9     1    12     1     6    23    13    21     1     4    12     6     1#
 [375]     8     1     2     1     1    12     3     1     2    21     2     9    10     1 15781     3     1    35     1    13     1     7#
 [397]     6     8     2     1    35     5     6     4     7     2     3     1     1     6     1     3     2     2     1    55    10     2#
 [419]     6     3     8     1     1     3    49     4     5     1     6     1    38    95     1    19     3     8    20     2     1     2#
 [441]   156   110     1     1     2    11     2     7    76     6    38     1     1     3     1     2    11    39    51     1    74     1#
 [463]     1     1     2     9     2     1     3    73     1     2    53     3     1     3     1     7     1     1    11    29    22     2#
 [485]    16    11     1     3     3     6     1     2     3     1     8    26     6     2     2     1    14     3     1     5     1     1#
 [507]     1    20     1     4     6     4  1879     8    30     7     3     1     1    69    17     1    65     1     1     6    26     1#
 [529]     2     7     1     4     1    11    43    34     1     1   144     1     3     6     3     1     2     2    14    12     7     9#
 [551]    21     6     1    10    43     2     1     4     2     3     9     3     4     2     1    17     1     2     4     3     9    16#
 [573]    66    21     6     1     5     1     1     1     4     4     2     3     1    15    11     9    29     4     1     1    38     5#
 [595]     7     8    21     8     3    24     3    24     6     2     6   156     4     9     1     2     1     1     8     1     1     6#
 [617]     3    65     5    16    18     1     9     1     1     3    30     9     3    20     8     8     7    35     1     1     8    14#
 [639]     9     1     5     1     1     1     1     1     3     1     1     8     4     1     4     8    43     5     1    17     1    16#
 [661]     1     4     4     2     1     1     6     8     3     6     9     1     1     3    25    22     2     1    25     1     4     2#
 [683]     1    13     3     8   111    17     1     1     2     2    10     1     1    46     3     1     1    10     3     4     5    49#
 [705]    72    62    75     1    34     4    10     5     1     5     8     6     2     6     3    43     8     1     2    10     2   164#
 [727]    35     8     1    54     2    21     2    18     1     3     2     4    15     2     8     2   101     1   249     3     6     6#
 [749]    21    24     2     4    26     3     5     9     6     1     6     7     6     1    59     2   296     7     1     1    60     1#
 [771]     1     8     1    16     1     5     2     1    10    17     2     2     3    80     1     3     5     4     1     1     2    17#
 [793]     4     4    11     3     4     1     2     1     1     2     5     2     2    37     7     1     4     7     4     3     1     4#
 [815]    16     1     1     6     1     5     1    30    11     8     1     3     2    76    11     4     2     6    31    16     8     4#
 [837]     3     5     3     2     1    68     1    14     1     1     2     1     1    27   272   107    20     1    31     3     1   186#
 [859]    63     9     4     7    13     7    15     4     3     1     2     6    31    21    77    29    12     3    10     1    82     1#
 [881]     2     1     7     1    63     2    28     2   761   257     2     1     1     9     1    20     2   124     2    44     3     9#
 [903]     2     2    36     1    16     1     1     3    36    22     3     1    64     1     1     1    48    37     1   249    55     5#
 [925]     1     1     1     3    10     2    19     1     2     5    10   456  2715     2    23     1     4     2     3     1     3    14#
 [947]     9     4     2     5     1     9    10     5     2    17    80     4    11     1     1     2     6     2    17     1     4    12#
 [969]     3     1     2     1     1     3    13     4     3    17    10    21     2     7     9     2    83     1     4     3     2   291#
 [991]     2     1    14     3     5     8     1     1     2     1     1     6     3     6    36     3    16    16     1     2     2    16#
[1013]    68     4    10     1     1     1    32     2    71     1     1     2    11     9     3     9     6    14    14     1    13    34#
[1035]     2   172     3     1     8    91     9     1    26     1     4     1     8     2     3     1     3     3     1    32     3    71#
[1057]     2     2     3    17   109    39    42    23    10   165     1     8     2    44     4    36     2     3     2     7     4     8#
[1079]     6     8   213    25     8    13     2    33  1106     3     4    19    16     5     1     6     5     3     7     6    39     7#
[1101]     7    16     1     4    69     1     2     6     1     3     1     3     2     2     1     1     1     2     1     2     7     1#
[1123]    11    70     8     4    17     5     4    93     1    69     1    17    12    15     3    21     1     6     9     1     1     2#
[1145]     2     1     1     1     5     1     1     3     2     1     4     7     2     3     4     5    12     1    34     1     9     2#
[1167]     3     1     3     3     1     1   394     5     6     1    63     1     6     1    48     1     7     3     5     1    15     2#
[1189]     1    33     5    55     6     3    12     8     2     7     9    93     1     5    20     6     9     4     1    36     1    69#
[1211]     3    22     4     5     3     4    10    40     1     1     9    14     3     1     3     1     1     1     3    39     6    23#
[1233]     1    48    20     2     5     3     2     1    14     1     6     4     2     9    17     1     6     4     9     6     2    10#
[1255]     3     1    19     1     5     9     2     2     3     5     4    22     1     1    41     6     1     1     3     7    15     1#
[1277]    39    14     1     1     3    19     1    14     1     8     6     3    13     1     1    58     2    40     5     7     1    11#
[1299]     2    40     1    40    42     4     4     3     2     5    13     2     2     1     8     1     1     4     1     1     8     1#
[1321]     3    35    34     1     1     1     2     1     3     2     1    43     1     1     1    88     1     1     1     1     7     2#
[1343]     5     2     1     2     2     1     2     3    10     5     1     7     3     1     1    10     2   102     3    28     4    32#
[1365]     1     2     1     6     6     9    92     6     3     4     9     1     1    24     2     1     3     2    11     2    33     5#
[1387]    49     6     5    29     2     3     3     1     2     1     1     2     1     9     2     5    22     4    53     2     2     7#
[1409]     2     1    31     7     4     1     1     8     8   905     1     1     4     4     7     1     2     6     2     6    26     4#
[1431]     7     1    14     4     3     2    10   175     1    11     9    20     7     1     2     2     3     7     2     3     3     1#
[1453]    21     1   102    12     1    18     1     4     3     4     6    41     4     3    66    20     2     1     1     1     4     1#
[1475]     3     7     1     4     5    29    13     3     7    27     1     1    19     1     1     1    27    10     2     4     2     7#
[1497]     4    63     1    81     2     2     8     4     9     1     2     1     5     5    31     4     1     2     5    10     1     4#
[1519]    16     1     1    15    18    15     3    13     2    49     6     8    42     2     3    13     3    13    14    51     1    10#
[1541]     5     2    18     1     1     4    31     3     2    24     1     3    53    58     6     1     7     5     2     7     2     2#
[1563]     4     4   116     3    22     2     1     5     2     7     6    29     6     1     1    11    28    25     3     4    21    33#
[1585]     2     1     6     9    25     8     1     4     1    15     3     3     3     4    15    27    21     4    14    37     3    20#
[1607]   362     2     1     7     4     1     2     7     1     6     3     1    11     2     9     1    10     2     1     2     3    11#
[1629]     8     2     1    20     6   589     5     6     1     1    11     3    17    15     1     8     2     1     9    19    20     2#
[1651]     1     3     1     6     1     1     4     5     1     1     4    10     1     1     8     1    20     1     4    11     1     1#
[1673]     7   113     1     6     2     2     3     1     1     1     3     1    16    69     5     3    22     1    63    28     1     1#
[1695]     5    10    10     2    37     7     2     1     3     2     2     5     1     1     2     5     9     1    98    74     7    11#
[1717]     8     1     1     2     2     3     1     6    23     2     2     3    11     8     4    44    55     1     5    47     2     2#
[1739]     2     2     1     1    15     2     8     1     2     5    28    11     1     4     2     2     1     1     3     2    17     1#
[1761]     2     1     5     1    19     2     2     3     1    55     2     6    87     1    13    31     2     3    95     8    18    11#
[1783]     2    61     3     1     7     1    17    22     3     6     2    70     3    11     5     2    11     3    42    20     1     3#
[1805]     4     3     7    25     2     4     1     1     4     6     3     1    17     1   236     1     4     1    13     1    12     3#
[1827]     2     1    35    14     5    89     2    11     2     2     9    26     5    62     1    24     4    18     1     2     2     1#
[1849]     6    12     5     2    11     2     4     1     2     9     1     6     5     1     1     3     1     4     2     1     7     1#
[1871]     7     4    33    52    24    28     8     1     2     3   909     6    57     5     1     2    11     1   226    21     5     4#
[1893]    44     2     2     9    13     4    23    11     9     7    10     2     1     1     5     1     1     1     7     4     1     6#
[1915]    10    22   155     1    13     2     1     1     3     7     2     1     3    13     1#
> data$X1 <- as.numeric(gsub(",","", data$X1))#
> head(data)#
  ACCOMACK.VA. X1 state county guns#
1      ADA(ID)  9    ID    ADA    9#
2    ADAIR(KY)  7    KY  ADAIR    7#
3    ADAIR(MO)  1    MO  ADAIR    1#
4    ADAMS(CO) 15    CO  ADAMS   15#
5    ADAMS(IL) 14    IL  ADAMS   14#
6    ADAMS(IN)  4    IN  ADAMS    4#
> head(gun_state)#
Error in head(gun_state) : object 'gun_state' not found#
> guns_state#
   Group.1    x#
1       AK   33#
2       AL 1070#
3       AR  945#
4       AZ  355#
5       CA  526#
6       CO  187#
7       CT   46#
8       DC    2#
9       DE   10#
10      FL  673#
11      GA  933#
12      GU    2#
13      HI    8#
14      IA  397#
15      ID   39#
16      IL   NA#
17      IN   NA#
18      KS  177#
19      KY 1226#
20      LA  529#
21      MA  108#
22      MD   50#
23      ME   18#
24      MI  679#
25      MN  474#
26      MO  344#
27      MS 4296#
28      MT   53#
29      NC  295#
30      ND   31#
31      NE  104#
32      NH   14#
33      NJ   21#
34      NM   75#
35      NV  103#
36      NY   97#
37      OH 1121#
38      OK  207#
39      OR   40#
40      PA  181#
41      PR    5#
42      RI    5#
43      SC  152#
44      SD   36#
45      TN 1090#
46      TX  937#
47      UT   53#
48      VA  268#
49      VT    4#
50      WA  156#
51      WI 1647#
52      WV  202#
53      WY   29#
> data$guns <- as.numeric(gsub(",","", data$X1))#
> #
> guns_state#
   Group.1    x#
1       AK   33#
2       AL 1070#
3       AR  945#
4       AZ  355#
5       CA  526#
6       CO  187#
7       CT   46#
8       DC    2#
9       DE   10#
10      FL  673#
11      GA  933#
12      GU    2#
13      HI    8#
14      IA  397#
15      ID   39#
16      IL   NA#
17      IN   NA#
18      KS  177#
19      KY 1226#
20      LA  529#
21      MA  108#
22      MD   50#
23      ME   18#
24      MI  679#
25      MN  474#
26      MO  344#
27      MS 4296#
28      MT   53#
29      NC  295#
30      ND   31#
31      NE  104#
32      NH   14#
33      NJ   21#
34      NM   75#
35      NV  103#
36      NY   97#
37      OH 1121#
38      OK  207#
39      OR   40#
40      PA  181#
41      PR    5#
42      RI    5#
43      SC  152#
44      SD   36#
45      TN 1090#
46      TX  937#
47      UT   53#
48      VA  268#
49      VT    4#
50      WA  156#
51      WI 1647#
52      WV  202#
53      WY   29#
> guns_state <- aggregate(data$guns, list(data$state), sum)#
> guns_state#
   Group.1     x#
1       AK    33#
2       AL  1070#
3       AR   945#
4       AZ   355#
5       CA   526#
6       CO   187#
7       CT    46#
8       DC     2#
9       DE    10#
10      FL   673#
11      GA   933#
12      GU     2#
13      HI     8#
14      IA   397#
15      ID    39#
16      IL 22051#
17      IN  7747#
18      KS   177#
19      KY  1226#
20      LA   529#
21      MA   108#
22      MD    50#
23      ME    18#
24      MI   679#
25      MN   474#
26      MO   344#
27      MS  4296#
28      MT    53#
29      NC   295#
30      ND    31#
31      NE   104#
32      NH    14#
33      NJ    21#
34      NM    75#
35      NV   103#
36      NY    97#
37      OH  1121#
38      OK   207#
39      OR    40#
40      PA   181#
41      PR     5#
42      RI     5#
43      SC   152#
44      SD    36#
45      TN  1090#
46      TX   937#
47      UT    53#
48      VA   268#
49      VT     4#
50      WA   156#
51      WI  1647#
52      WV   202#
53      WY    29#
> barplot(guns_state)#
Error in barplot.default(guns_state) : #
  'height' must be a vector or a matrix#
> barplot(guns_state$x)#
> barplot(guns_state$x, ylab="Number of guns discovered", xlab="states")#
>
data <- read.csv("county-data.csv")#
#adds a county column by splitting in front of the parenthesis#
data$county <- sapply(strsplit(as.character(data$ACCOMACK.VA.), split="\\("), function(x) { x[1] })#
#adds a state column by splitting after the parenthesis#
data$state <- sapply(strsplit(as.character(data$ACCOMACK.VA.), split="\\("), function(x) { x[2] })#
#resplit the state data to get rid of the parenthesis sign at the end#
data$state <- sapply(strsplit(as.character(data$state), split="\\)"), function(x) { x[1] })#
#getting data for each state#
get_state_data <- function(mystate) {this_state_data <- subset(data, state == mystate) }#
#turn data$guns into a number#
data$guns <- as.numeric(gsub("\\,","", data$X1))#
#create a new dataframe that aggregates the guns for each state#
guns_state <- aggregate(data$guns, list(data$state), sum)#
#sort it by the number of guns so it makes a pretty graph#
guns_state2 <- guns_state[order(guns_state$x, decreasing = TRUE), ]#
#plot it like a boss#
barcolors <- ifelse(guns_state2$Group.1 == "IL", "red", "lightgray")#
barplot(guns_state2$x, ylab="Number of Guns", xlab="States", col=barcolors, border=F)#
#add some labels#
text(guns_state2$x + 400, guns_state2$Group.1, adj=c(.5, NA), labels=guns_state2$Group.1, col="blue", cex=.7)#
install.packages("maptools")#
library(maptools)#
shapes <- readShapePoly("nytlayout_state/nytlayout_state.shp")#
install.packages("RColorBrewer")#
library(RColorBrewer)#
map_data <- data.frame(shapes)#
#getting rid of Guam and Hawaii#
guns_state3 <- guns_state2[-53,]#
guns_state3 <- guns_state3[-49,]#
#match the data (make sure you put the map data first--but I don't know why)#
match_order <- match(map_data$STATE_ABBR, guns_state3$Group.1)#
map_data$guns <- guns_state3$x[match_order]#
#plotting#
map_breaks <- c(0, 50, 100, 250, 500, 750, 1000, 2500, 5000, 25000)#
buckets <- cut(map_data$guns, breaks=map_breaks)#
numeric_buckets <- as.numeric(buckets)#
colors <- brewer.pal(9, "YlOrRd")#
plot(shapes, col=colors[numeric_buckets])
ls
setwd('~/waterproject_data/)
dir()
getwd()
setwd('~/waterproject/dv')
data <- read.csv("county-data.csv")#
#adds a county column by splitting in front of the parenthesis#
data$county <- sapply(strsplit(as.character(data$ACCOMACK.VA.), split="\\("), function(x) { x[1] })#
#adds a state column by splitting after the parenthesis#
data$state <- sapply(strsplit(as.character(data$ACCOMACK.VA.), split="\\("), function(x) { x[2] })#
#resplit the state data to get rid of the parenthesis sign at the end#
data$state <- sapply(strsplit(as.character(data$state), split="\\)"), function(x) { x[1] })#
#getting data for each state#
get_state_data <- function(mystate) {this_state_data <- subset(data, state == mystate) }#
#turn data$guns into a number#
data$guns <- as.numeric(gsub("\\,","", data$X1))#
#create a new dataframe that aggregates the guns for each state#
guns_state <- aggregate(data$guns, list(data$state), sum)#
#sort it by the number of guns so it makes a pretty graph#
guns_state2 <- guns_state[order(guns_state$x, decreasing = TRUE), ]#
#plot it like a boss#
barcolors <- ifelse(guns_state2$Group.1 == "IL", "red", "lightgray")#
barplot(guns_state2$x, ylab="Number of Guns", xlab="States", col=barcolors, border=F)#
#add some labels#
text(guns_state2$x + 400, guns_state2$Group.1, adj=c(.5, NA), labels=guns_state2$Group.1, col="blue", cex=.7)#
install.packages("maptools")#
library(maptools)#
shapes <- readShapePoly("nytlayout_state/nytlayout_state.shp")#
install.packages("RColorBrewer")#
library(RColorBrewer)#
map_data <- data.frame(shapes)#
#getting rid of Guam and Hawaii#
guns_state3 <- guns_state2[-53,]#
guns_state3 <- guns_state3[-49,]#
#match the data (make sure you put the map data first--but I don't know why)#
match_order <- match(map_data$STATE_ABBR, guns_state3$Group.1)#
map_data$guns <- guns_state3$x[match_order]#
#plotting#
map_breaks <- c(0, 50, 100, 250, 500, 750, 1000, 2500, 5000, 25000)#
buckets <- cut(map_data$guns, breaks=map_breaks)#
numeric_buckets <- as.numeric(buckets)#
colors <- brewer.pal(9, "YlOrRd")#
plot(shapes, col=colors[numeric_buckets])
setwd('~/water/waterproject/')
library(maptools)
data <- read.csv('water-csv.csv')
shapes <- readPolyShapes('ca/counties.shp')
